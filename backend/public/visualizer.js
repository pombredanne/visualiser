/*
 * visualizer frontend javascript functions
 */

$(document).ready(function(){
    // initializer the page elements
    var img = document.createElement('IMG');
    img.id = 'img';
    img.src = './treemap/firefox/42096?width=1000&hight=500&color=' +
        $('#selectColor').val() + '&size=' + $('#selectSize').val();

    document.getElementsByTagName('body')[0].appendChild(img);
    
    var infodiv = document.createElement('DIV');
    infodiv.id = 'info';
    document.getElementsByTagName('body')[0].appendChild(infodiv);

	// initialize Tooltip
    $(img).mousemove(showToolTip);
    $(img).mouseout(hideToolTip);

	// initialize Zoom
    $(img).mousewheel(zoom);

    // initialize SelectBoxes
    $("select#selectSize").change(update);
    $("select#selectColor").change(update);
    $("#dualslider").slider({
	    range: true,
	    min: 0,
	    max: 1000,
	    values: [0, 1000],
	    slide: function(event, ui) {
		    $("#amount").val('$' + ui.values[0] + ' - $' + ui.values[1]);
	    }
	 });
	 /*
<div class="ui-slider ui-slider-horizontal ui-widget ui-widget-content ui-corner-all">
<a style="left: 0%;" class="ui-slider-handle ui-state-default ui-corner-all" href="#"></a>
</div>

Note: This is a sample of markup generated by the slider plugin, not markup you should use to create a slider. The only markup needed for that is <div><div>. 			 
    */
});

function getScrollOffset(){
      var x = 0, y = 0;
      if (self.pageYOffset){          // all except Explorer
          x = self.pageXOffset;
          y = self.pageYOffset;
      }
      else if (document.documentElement && document.documentElement.scrollTop){
               // Explorer 6 Strict
          x = document.documentElement.scrollLeft;
          y = document.documentElement.scrollTop;
      }
      else if (document.body){           // all other Explorers
          x = document.body.scrollLeft;
          y = document.body.scrollTop;
      };
      return new Array(x,y);
}

function formatTooltip(data){
    // Take the JSON data and format it for presentation
    r = '<b>' + data["name"] + '</b>';
    $.each(data['data'], function(key, value) {
        r += '<br/>' + key + ': ' + value; 
    }); 
    return r;
}

function isContained(point, rectangle){
    // check if position is within rectangle
    if ((rectangle[0] <= point[0]) && (point[0] <= rectangle[2]) && 
        (rectangle[1] <= point[1]) && (point[1] <= rectangle[3])){
        return true;
    }
    return false;
}

function showToolTip(ev){
    //if(!ev) { ev = window.event; };
    // slow down mousemove to two requests per sec. so that 
    // the backand max processes two Tooltips/sec
    if ((parseInt($("#info").attr("timestamp"))+500) > ev.timeStamp){
        return;
    }

    var x = ev.pageX - this.offsetLeft;
    var y = ev.pageY - this.offsetTop;
    
    if ($("#info").attr("rectangle")){
        r = $.map($("#info").attr("rectangle").split(','), Number);
        if(isContained([x, y], r)){
            return;
        }
    }        
    
    $("#info").attr("timestamp", ev.timeStamp);

    var infotext = '';
    $.ajax({
        url: "./tooltip?pos_x=" + x + "&pos_y=" + y + "&callback=?",
        dataType: "json",
        contentType: "application/json",
        async: "true",
        success: function(data) {
            infotext = formatTooltip(data);
            infodiv = document.getElementById('info');
            infodiv.innerHTML = infotext;
          
            infodiv.style.display = 'block';

            $("#info").attr("rectangle", data['rectangle']);

            var scrollOffset = getScrollOffset();

            infodiv.style.top  = ev.clientY + scrollOffset[1] + 10 + 'px';
            infodiv.style.left = ev.clientX + scrollOffset[0] + 10 + 'px';
        }
    });
}

function hideToolTip(){
    document.getElementById('info').style.display = 'none';
}

function zoom(ev, delta){
    // this is a mousewheel event
    // Zoom in/out by use of the mouse wheel
    var x = ev.pageX - this.offsetLeft;
    var y = ev.pageY - this.offsetTop;
    
    $("img").attr("src", "./treemap/firefox/42096?width=1000&hight=500&pos_x=" + 
        x + "&pos_y=" + y + "&zoom_factor=" + delta +
        "&color=" + $('#selectColor').val() + '&size=' + $('#selectSize').val());                
    // clear the Tooltip
    $("div#info").removeAttr("rectangle");
    $("div#info").removeAttr("timestamp");
    hideToolTip();
}

function update(){
    // update treemap after selectbox for area or color has been changed
    $("img").attr("src", "./treemap/firefox/42096?width=1000&hight=500&color=" +
        $('#selectColor').val() + '&size=' + $('#selectSize').val());
    // clear the Tooltip
    $("div#info").removeAttr("rectangle");
    $("div#info").removeAttr("timestamp");
    hideToolTip();
}

